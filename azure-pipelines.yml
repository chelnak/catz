trigger:
  batch: true
  branches:
    include:
      - "*"
  tags:
    include:
      - "v*"      
  paths:
    include:
      - jcat/*
      - azure-pipelines.yml
      - requirements.txt

pr: none

pool:
  vmImage: 'ubuntu-18.04'

stages:
  - stage: CI
    jobs: 
    - job: BuildGeneric
      steps:
        - task: gitversion/setup@0
          displayName: Install GitVersion
          inputs:
            versionSpec: '5.x'

        - task: gitversion/execute@0
          displayName: Use GitVersion
          inputs:
            useConfigFile: true
            configFilePath: 'GitVersion.yml'

        - task: UsePythonVersion@0
          inputs:
            versionSpec: 3.8

        - bash: |
            pip install -r requirements.txt
          displayName: Install Requirements

        - bash: |
            flake8 jcat/ --max-line-length=120 --tee
          displayName: Lint

        - bash: |
            python setup.py clean --all bdist_wheel
          displayName: Build            
          env:
            GITVERSION_MAJORMINORPATCH: $(GITVERSION_MAJORMINORPATCH)

        - task: CopyFiles@2
          displayName: Copy artifact
          inputs:
            Contents: |
              dist/*
            TargetFolder: $(Build.ArtifactStagingDirectory)

        - task: PublishPipelineArtifact@1
          displayName: Publish
          inputs:
            targetPath: $(Build.ArtifactStagingDirectory)
            artifactName: publish

  - stage: Release
    dependsOn: CI
    condition: succeeded('CI')
    jobs:
    - job: release
      condition: startswith(variables['Build.SourceBranch'], 'refs/tags/v')
      steps:      
        - task: DownloadPipelineArtifact@2
          displayName: Restore Pipeline Artifacts

        - script: 'pip install twine'
        
        - task: TwineAuthenticate@1
          inputs:
            pythonUploadServiceConnection: 'pypi'

        - script: 'python -m twine upload -r pypi --config-file $(PYPIRC_PATH) "$(Pipeline.Workspace)/publish/*"'

        - task: GitHubRelease@1
          displayName: Release
          condition: 
          inputs:
            gitHubConnection: 'chelnak'
            title: jcat
            repositoryName: 'chelnak/jcat'
            assets: "$(Pipeline.Workspace)/publish/*.*"
